ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWR_OK_MODE.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWR_OK_MODE_SetDriveMode,"ax",%progbits
  20              		.align	2
  21              		.global	PWR_OK_MODE_SetDriveMode
  22              		.code	16
  23              		.thumb_func
  24              		.type	PWR_OK_MODE_SetDriveMode, %function
  25              	PWR_OK_MODE_SetDriveMode:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\PWR_OK_MODE.c"
   1:Generated_Source\PSoC4/PWR_OK_MODE.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWR_OK_MODE.c **** * File Name: PWR_OK_MODE.c  
   3:Generated_Source\PSoC4/PWR_OK_MODE.c **** * Version 2.20
   4:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
   5:Generated_Source\PSoC4/PWR_OK_MODE.c **** * Description:
   6:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
   8:Generated_Source\PSoC4/PWR_OK_MODE.c **** ********************************************************************************
   9:Generated_Source\PSoC4/PWR_OK_MODE.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/PWR_OK_MODE.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/PWR_OK_MODE.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/PWR_OK_MODE.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/PWR_OK_MODE.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
  15:Generated_Source\PSoC4/PWR_OK_MODE.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/PWR_OK_MODE.c **** #include "PWR_OK_MODE.h"
  17:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
  18:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
  19:Generated_Source\PSoC4/PWR_OK_MODE.c **** #if defined(PWR_OK_MODE__PC)
  20:Generated_Source\PSoC4/PWR_OK_MODE.c ****     #define PWR_OK_MODE_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/PWR_OK_MODE.c ****     do { \
  22:Generated_Source\PSoC4/PWR_OK_MODE.c ****         PWR_OK_MODE_PC =   (PWR_OK_MODE_PC & \
  23:Generated_Source\PSoC4/PWR_OK_MODE.c ****                                 (uint32)(~(uint32)(PWR_OK_MODE_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/PWR_OK_MODE.c ****                                 (PWR_OK_MODE_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/PWR_OK_MODE.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/PWR_OK_MODE.c ****                                 (PWR_OK_MODE_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/PWR_OK_MODE.c ****     } while (0)
  28:Generated_Source\PSoC4/PWR_OK_MODE.c **** #else
  29:Generated_Source\PSoC4/PWR_OK_MODE.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/PWR_OK_MODE.c ****         #define PWR_OK_MODE_SetP4PinDriveMode(shift, mode)  \
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 2


  31:Generated_Source\PSoC4/PWR_OK_MODE.c ****         do { \
  32:Generated_Source\PSoC4/PWR_OK_MODE.c ****             PWR_OK_MODE_USBIO_CTRL_REG = (PWR_OK_MODE_USBIO_CTRL_REG & \
  33:Generated_Source\PSoC4/PWR_OK_MODE.c ****                                     (uint32)(~(uint32)(PWR_OK_MODE_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/PWR_OK_MODE.c ****                                     (PWR_OK_MODE_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/PWR_OK_MODE.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/PWR_OK_MODE.c ****                                     (PWR_OK_MODE_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/PWR_OK_MODE.c ****         } while (0)
  38:Generated_Source\PSoC4/PWR_OK_MODE.c ****     #endif
  39:Generated_Source\PSoC4/PWR_OK_MODE.c **** #endif
  40:Generated_Source\PSoC4/PWR_OK_MODE.c ****   
  41:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
  42:Generated_Source\PSoC4/PWR_OK_MODE.c **** #if defined(PWR_OK_MODE__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/PWR_OK_MODE.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * Function Name: PWR_OK_MODE_SetDriveMode
  45:Generated_Source\PSoC4/PWR_OK_MODE.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *
  47:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * 
  49:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *
  52:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *
  55:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * \param mode
  56:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *
  59:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * \return
  60:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *  None
  61:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *
  62:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * \sideeffect
  63:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *
  69:Generated_Source\PSoC4/PWR_OK_MODE.c ****     * \funcusage
  70:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *  \snippet PWR_OK_MODE_SUT.c usage_PWR_OK_MODE_SetDriveMode
  71:Generated_Source\PSoC4/PWR_OK_MODE.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/PWR_OK_MODE.c ****     void PWR_OK_MODE_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/PWR_OK_MODE.c ****     {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0200     		movs	r2, r0
  41 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 3


  42 000a 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC4/PWR_OK_MODE.c **** 		PWR_OK_MODE_SetP4PinDriveMode(PWR_OK_MODE__0__SHIFT, mode);
  43              		.loc 1 74 0
  44 000c 0B4B     		ldr	r3, .L2
  45 000e 0B4A     		ldr	r2, .L2
  46 0010 1268     		ldr	r2, [r2]
  47 0012 0B49     		ldr	r1, .L2+4
  48 0014 1140     		ands	r1, r2
  49 0016 FA1D     		adds	r2, r7, #7
  50 0018 1278     		ldrb	r2, [r2]
  51 001a 9204     		lsls	r2, r2, #18
  52 001c 0A43     		orrs	r2, r1
  53 001e 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/PWR_OK_MODE.c **** 		PWR_OK_MODE_SetP4PinDriveMode(PWR_OK_MODE__1__SHIFT, mode);
  54              		.loc 1 75 0
  55 0020 064B     		ldr	r3, .L2
  56 0022 064A     		ldr	r2, .L2
  57 0024 1268     		ldr	r2, [r2]
  58 0026 0749     		ldr	r1, .L2+8
  59 0028 1140     		ands	r1, r2
  60 002a FA1D     		adds	r2, r7, #7
  61 002c 1278     		ldrb	r2, [r2]
  62 002e 5205     		lsls	r2, r2, #21
  63 0030 0A43     		orrs	r2, r1
  64 0032 1A60     		str	r2, [r3]
  76:Generated_Source\PSoC4/PWR_OK_MODE.c ****     }
  65              		.loc 1 76 0
  66 0034 C046     		nop
  67 0036 BD46     		mov	sp, r7
  68 0038 02B0     		add	sp, sp, #8
  69              		@ sp needed
  70 003a 80BD     		pop	{r7, pc}
  71              	.L3:
  72              		.align	2
  73              	.L2:
  74 003c 08030440 		.word	1074004744
  75 0040 FFFFE3FF 		.word	-1835009
  76 0044 FFFF1FFF 		.word	-14680065
  77              		.cfi_endproc
  78              	.LFE0:
  79              		.size	PWR_OK_MODE_SetDriveMode, .-PWR_OK_MODE_SetDriveMode
  80              		.section	.text.PWR_OK_MODE_Write,"ax",%progbits
  81              		.align	2
  82              		.global	PWR_OK_MODE_Write
  83              		.code	16
  84              		.thumb_func
  85              		.type	PWR_OK_MODE_Write, %function
  86              	PWR_OK_MODE_Write:
  87              	.LFB1:
  77:Generated_Source\PSoC4/PWR_OK_MODE.c **** #endif
  78:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
  79:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
  80:Generated_Source\PSoC4/PWR_OK_MODE.c **** /*******************************************************************************
  81:Generated_Source\PSoC4/PWR_OK_MODE.c **** * Function Name: PWR_OK_MODE_Write
  82:Generated_Source\PSoC4/PWR_OK_MODE.c **** ****************************************************************************//**
  83:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
  84:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \brief Writes the value to the physical port (data output register), masking
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 4


  85:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  and shifting the bits appropriately. 
  86:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
  87:Generated_Source\PSoC4/PWR_OK_MODE.c **** * The data output register controls the signal applied to the physical pin in 
  88:Generated_Source\PSoC4/PWR_OK_MODE.c **** * conjunction with the drive mode parameter. This function avoids changing 
  89:Generated_Source\PSoC4/PWR_OK_MODE.c **** * other bits in the port by using the appropriate method (read-modify-write or
  90:Generated_Source\PSoC4/PWR_OK_MODE.c **** * bit banding).
  91:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
  92:Generated_Source\PSoC4/PWR_OK_MODE.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  93:Generated_Source\PSoC4/PWR_OK_MODE.c **** * as it is driven by the hardware signal attached to it.
  94:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
  95:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \param value
  96:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  Value to write to the component instance.
  97:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
  98:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \return 
  99:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  None 
 100:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 101:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \sideeffect
 102:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 103:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 104:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  interrupts this function and performs writes to the Pins component data 
 105:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 106:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 107:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  this function.
 108:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 109:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \funcusage
 110:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  \snippet PWR_OK_MODE_SUT.c usage_PWR_OK_MODE_Write
 111:Generated_Source\PSoC4/PWR_OK_MODE.c **** *******************************************************************************/
 112:Generated_Source\PSoC4/PWR_OK_MODE.c **** void PWR_OK_MODE_Write(uint8 value)
 113:Generated_Source\PSoC4/PWR_OK_MODE.c **** {
  88              		.loc 1 113 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 16
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92 0000 80B5     		push	{r7, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 84B0     		sub	sp, sp, #16
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 100 0006 0200     		movs	r2, r0
 101 0008 FB1D     		adds	r3, r7, #7
 102 000a 1A70     		strb	r2, [r3]
 114:Generated_Source\PSoC4/PWR_OK_MODE.c ****     uint8 drVal = (uint8)(PWR_OK_MODE_DR & (uint8)(~PWR_OK_MODE_MASK));
 103              		.loc 1 114 0
 104 000c 0D4B     		ldr	r3, .L5
 105 000e 1B68     		ldr	r3, [r3]
 106 0010 DAB2     		uxtb	r2, r3
 107 0012 0F23     		movs	r3, #15
 108 0014 FB18     		adds	r3, r7, r3
 109 0016 3F21     		movs	r1, #63
 110 0018 0A40     		ands	r2, r1
 111 001a 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC4/PWR_OK_MODE.c ****     drVal = (drVal | ((uint8)(value << PWR_OK_MODE_SHIFT) & PWR_OK_MODE_MASK));
 112              		.loc 1 115 0
 113 001c FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 5


 114 001e 1B78     		ldrb	r3, [r3]
 115 0020 9B01     		lsls	r3, r3, #6
 116 0022 D9B2     		uxtb	r1, r3
 117 0024 0F23     		movs	r3, #15
 118 0026 FB18     		adds	r3, r7, r3
 119 0028 0F22     		movs	r2, #15
 120 002a BA18     		adds	r2, r7, r2
 121 002c 1278     		ldrb	r2, [r2]
 122 002e 0A43     		orrs	r2, r1
 123 0030 1A70     		strb	r2, [r3]
 116:Generated_Source\PSoC4/PWR_OK_MODE.c ****     PWR_OK_MODE_DR = (uint32)drVal;
 124              		.loc 1 116 0
 125 0032 044B     		ldr	r3, .L5
 126 0034 0F22     		movs	r2, #15
 127 0036 BA18     		adds	r2, r7, r2
 128 0038 1278     		ldrb	r2, [r2]
 129 003a 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/PWR_OK_MODE.c **** }
 130              		.loc 1 117 0
 131 003c C046     		nop
 132 003e BD46     		mov	sp, r7
 133 0040 04B0     		add	sp, sp, #16
 134              		@ sp needed
 135 0042 80BD     		pop	{r7, pc}
 136              	.L6:
 137              		.align	2
 138              	.L5:
 139 0044 00030440 		.word	1074004736
 140              		.cfi_endproc
 141              	.LFE1:
 142              		.size	PWR_OK_MODE_Write, .-PWR_OK_MODE_Write
 143              		.section	.text.PWR_OK_MODE_Read,"ax",%progbits
 144              		.align	2
 145              		.global	PWR_OK_MODE_Read
 146              		.code	16
 147              		.thumb_func
 148              		.type	PWR_OK_MODE_Read, %function
 149              	PWR_OK_MODE_Read:
 150              	.LFB2:
 118:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
 119:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
 120:Generated_Source\PSoC4/PWR_OK_MODE.c **** /*******************************************************************************
 121:Generated_Source\PSoC4/PWR_OK_MODE.c **** * Function Name: PWR_OK_MODE_Read
 122:Generated_Source\PSoC4/PWR_OK_MODE.c **** ****************************************************************************//**
 123:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 124:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \brief Reads the associated physical port (pin status register) and masks 
 125:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  the required bits according to the width and bit position of the component
 126:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  instance. 
 127:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 128:Generated_Source\PSoC4/PWR_OK_MODE.c **** * The pin's status register returns the current logic level present on the 
 129:Generated_Source\PSoC4/PWR_OK_MODE.c **** * physical pin.
 130:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 131:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \return 
 132:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  The current value for the pins in the component as a right justified number.
 133:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 134:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \funcusage
 135:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  \snippet PWR_OK_MODE_SUT.c usage_PWR_OK_MODE_Read  
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 6


 136:Generated_Source\PSoC4/PWR_OK_MODE.c **** *******************************************************************************/
 137:Generated_Source\PSoC4/PWR_OK_MODE.c **** uint8 PWR_OK_MODE_Read(void)
 138:Generated_Source\PSoC4/PWR_OK_MODE.c **** {
 151              		.loc 1 138 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 0000 80B5     		push	{r7, lr}
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159 0002 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
 139:Generated_Source\PSoC4/PWR_OK_MODE.c ****     return (uint8)((PWR_OK_MODE_PS & PWR_OK_MODE_MASK) >> PWR_OK_MODE_SHIFT);
 161              		.loc 1 139 0
 162 0004 044B     		ldr	r3, .L9
 163 0006 1B68     		ldr	r3, [r3]
 164 0008 C022     		movs	r2, #192
 165 000a 1340     		ands	r3, r2
 166 000c 9B09     		lsrs	r3, r3, #6
 167 000e DBB2     		uxtb	r3, r3
 140:Generated_Source\PSoC4/PWR_OK_MODE.c **** }
 168              		.loc 1 140 0
 169 0010 1800     		movs	r0, r3
 170 0012 BD46     		mov	sp, r7
 171              		@ sp needed
 172 0014 80BD     		pop	{r7, pc}
 173              	.L10:
 174 0016 C046     		.align	2
 175              	.L9:
 176 0018 04030440 		.word	1074004740
 177              		.cfi_endproc
 178              	.LFE2:
 179              		.size	PWR_OK_MODE_Read, .-PWR_OK_MODE_Read
 180              		.section	.text.PWR_OK_MODE_ReadDataReg,"ax",%progbits
 181              		.align	2
 182              		.global	PWR_OK_MODE_ReadDataReg
 183              		.code	16
 184              		.thumb_func
 185              		.type	PWR_OK_MODE_ReadDataReg, %function
 186              	PWR_OK_MODE_ReadDataReg:
 187              	.LFB3:
 141:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
 142:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
 143:Generated_Source\PSoC4/PWR_OK_MODE.c **** /*******************************************************************************
 144:Generated_Source\PSoC4/PWR_OK_MODE.c **** * Function Name: PWR_OK_MODE_ReadDataReg
 145:Generated_Source\PSoC4/PWR_OK_MODE.c **** ****************************************************************************//**
 146:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 147:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \brief Reads the associated physical port's data output register and masks 
 148:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  the correct bits according to the width and bit position of the component 
 149:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  instance. 
 150:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 151:Generated_Source\PSoC4/PWR_OK_MODE.c **** * The data output register controls the signal applied to the physical pin in 
 152:Generated_Source\PSoC4/PWR_OK_MODE.c **** * conjunction with the drive mode parameter. This is not the same as the 
 153:Generated_Source\PSoC4/PWR_OK_MODE.c **** * preferred PWR_OK_MODE_Read() API because the 
 154:Generated_Source\PSoC4/PWR_OK_MODE.c **** * PWR_OK_MODE_ReadDataReg() reads the data register instead of the status 
 155:Generated_Source\PSoC4/PWR_OK_MODE.c **** * register. For output pins this is a useful function to determine the value 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 7


 156:Generated_Source\PSoC4/PWR_OK_MODE.c **** * just written to the pin.
 157:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 158:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \return 
 159:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  The current value of the data register masked and shifted into a right 
 160:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  justified number for the component instance.
 161:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 162:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \funcusage
 163:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  \snippet PWR_OK_MODE_SUT.c usage_PWR_OK_MODE_ReadDataReg 
 164:Generated_Source\PSoC4/PWR_OK_MODE.c **** *******************************************************************************/
 165:Generated_Source\PSoC4/PWR_OK_MODE.c **** uint8 PWR_OK_MODE_ReadDataReg(void)
 166:Generated_Source\PSoC4/PWR_OK_MODE.c **** {
 188              		.loc 1 166 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
 167:Generated_Source\PSoC4/PWR_OK_MODE.c ****     return (uint8)((PWR_OK_MODE_DR & PWR_OK_MODE_MASK) >> PWR_OK_MODE_SHIFT);
 198              		.loc 1 167 0
 199 0004 044B     		ldr	r3, .L13
 200 0006 1B68     		ldr	r3, [r3]
 201 0008 C022     		movs	r2, #192
 202 000a 1340     		ands	r3, r2
 203 000c 9B09     		lsrs	r3, r3, #6
 204 000e DBB2     		uxtb	r3, r3
 168:Generated_Source\PSoC4/PWR_OK_MODE.c **** }
 205              		.loc 1 168 0
 206 0010 1800     		movs	r0, r3
 207 0012 BD46     		mov	sp, r7
 208              		@ sp needed
 209 0014 80BD     		pop	{r7, pc}
 210              	.L14:
 211 0016 C046     		.align	2
 212              	.L13:
 213 0018 00030440 		.word	1074004736
 214              		.cfi_endproc
 215              	.LFE3:
 216              		.size	PWR_OK_MODE_ReadDataReg, .-PWR_OK_MODE_ReadDataReg
 217              		.section	.text.PWR_OK_MODE_SetInterruptMode,"ax",%progbits
 218              		.align	2
 219              		.global	PWR_OK_MODE_SetInterruptMode
 220              		.code	16
 221              		.thumb_func
 222              		.type	PWR_OK_MODE_SetInterruptMode, %function
 223              	PWR_OK_MODE_SetInterruptMode:
 224              	.LFB4:
 169:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
 170:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
 171:Generated_Source\PSoC4/PWR_OK_MODE.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/PWR_OK_MODE.c **** * Function Name: PWR_OK_MODE_SetInterruptMode
 173:Generated_Source\PSoC4/PWR_OK_MODE.c **** ****************************************************************************//**
 174:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 175:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \brief Configures the interrupt mode for each of the Pins component's
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 8


 176:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 177:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  specified in the Pins component.
 178:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 179:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 180:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  interrupt may trigger it.
 181:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 182:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \param position
 183:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 184:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 185:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  component. Or you may use PWR_OK_MODE_INTR_ALL to configure the
 186:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  interrupt mode of all the pins in the Pins component.       
 187:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  - PWR_OK_MODE_0_INTR       (First pin in the list)
 188:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  - PWR_OK_MODE_1_INTR       (Second pin in the list)
 189:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  - ...
 190:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  - PWR_OK_MODE_INTR_ALL     (All pins in Pins component)
 191:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 192:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \param mode
 193:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 194:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  \ref intrMode.
 195:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 196:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \return 
 197:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  None
 198:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  
 199:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \sideeffect
 200:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  It is recommended that the interrupt be disabled before calling this 
 201:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 202:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 203:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  port.
 204:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 205:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \funcusage
 206:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  \snippet PWR_OK_MODE_SUT.c usage_PWR_OK_MODE_SetInterruptMode
 207:Generated_Source\PSoC4/PWR_OK_MODE.c **** *******************************************************************************/
 208:Generated_Source\PSoC4/PWR_OK_MODE.c **** void PWR_OK_MODE_SetInterruptMode(uint16 position, uint16 mode)
 209:Generated_Source\PSoC4/PWR_OK_MODE.c **** {
 225              		.loc 1 209 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 16
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229 0000 80B5     		push	{r7, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 84B0     		sub	sp, sp, #16
 234              		.cfi_def_cfa_offset 24
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 237 0006 0200     		movs	r2, r0
 238 0008 BB1D     		adds	r3, r7, #6
 239 000a 1A80     		strh	r2, [r3]
 240 000c 3B1D     		adds	r3, r7, #4
 241 000e 0A1C     		adds	r2, r1, #0
 242 0010 1A80     		strh	r2, [r3]
 210:Generated_Source\PSoC4/PWR_OK_MODE.c ****     uint32 intrCfg;
 211:Generated_Source\PSoC4/PWR_OK_MODE.c ****     
 212:Generated_Source\PSoC4/PWR_OK_MODE.c ****     intrCfg =  PWR_OK_MODE_INTCFG & (uint32)(~(uint32)position);
 243              		.loc 1 212 0
 244 0012 0B4B     		ldr	r3, .L16
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 9


 245 0014 1B68     		ldr	r3, [r3]
 246 0016 BA1D     		adds	r2, r7, #6
 247 0018 1288     		ldrh	r2, [r2]
 248 001a D243     		mvns	r2, r2
 249 001c 1340     		ands	r3, r2
 250 001e FB60     		str	r3, [r7, #12]
 213:Generated_Source\PSoC4/PWR_OK_MODE.c ****     PWR_OK_MODE_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 251              		.loc 1 213 0
 252 0020 074B     		ldr	r3, .L16
 253 0022 BA1D     		adds	r2, r7, #6
 254 0024 391D     		adds	r1, r7, #4
 255 0026 1288     		ldrh	r2, [r2]
 256 0028 0988     		ldrh	r1, [r1]
 257 002a 0A40     		ands	r2, r1
 258 002c 92B2     		uxth	r2, r2
 259 002e 1100     		movs	r1, r2
 260 0030 FA68     		ldr	r2, [r7, #12]
 261 0032 0A43     		orrs	r2, r1
 262 0034 1A60     		str	r2, [r3]
 214:Generated_Source\PSoC4/PWR_OK_MODE.c **** }
 263              		.loc 1 214 0
 264 0036 C046     		nop
 265 0038 BD46     		mov	sp, r7
 266 003a 04B0     		add	sp, sp, #16
 267              		@ sp needed
 268 003c 80BD     		pop	{r7, pc}
 269              	.L17:
 270 003e C046     		.align	2
 271              	.L16:
 272 0040 0C030440 		.word	1074004748
 273              		.cfi_endproc
 274              	.LFE4:
 275              		.size	PWR_OK_MODE_SetInterruptMode, .-PWR_OK_MODE_SetInterruptMode
 276              		.section	.text.PWR_OK_MODE_ClearInterrupt,"ax",%progbits
 277              		.align	2
 278              		.global	PWR_OK_MODE_ClearInterrupt
 279              		.code	16
 280              		.thumb_func
 281              		.type	PWR_OK_MODE_ClearInterrupt, %function
 282              	PWR_OK_MODE_ClearInterrupt:
 283              	.LFB5:
 215:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
 216:Generated_Source\PSoC4/PWR_OK_MODE.c **** 
 217:Generated_Source\PSoC4/PWR_OK_MODE.c **** /*******************************************************************************
 218:Generated_Source\PSoC4/PWR_OK_MODE.c **** * Function Name: PWR_OK_MODE_ClearInterrupt
 219:Generated_Source\PSoC4/PWR_OK_MODE.c **** ****************************************************************************//**
 220:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 221:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \brief Clears any active interrupts attached with the component and returns 
 222:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  the value of the interrupt status register allowing determination of which
 223:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  pins generated an interrupt event.
 224:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 225:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \return 
 226:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 227:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 228:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 229:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  
 230:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \sideeffect
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 10


 231:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  Clears all bits of the physical port's interrupt status register, not just
 232:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  those associated with the Pins component.
 233:Generated_Source\PSoC4/PWR_OK_MODE.c **** *
 234:Generated_Source\PSoC4/PWR_OK_MODE.c **** * \funcusage
 235:Generated_Source\PSoC4/PWR_OK_MODE.c **** *  \snippet PWR_OK_MODE_SUT.c usage_PWR_OK_MODE_ClearInterrupt
 236:Generated_Source\PSoC4/PWR_OK_MODE.c **** *******************************************************************************/
 237:Generated_Source\PSoC4/PWR_OK_MODE.c **** uint8 PWR_OK_MODE_ClearInterrupt(void)
 238:Generated_Source\PSoC4/PWR_OK_MODE.c **** {
 284              		.loc 1 238 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 8
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288 0000 80B5     		push	{r7, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0002 82B0     		sub	sp, sp, #8
 293              		.cfi_def_cfa_offset 16
 294 0004 00AF     		add	r7, sp, #0
 295              		.cfi_def_cfa_register 7
 239:Generated_Source\PSoC4/PWR_OK_MODE.c **** 	uint8 maskedStatus = (uint8)(PWR_OK_MODE_INTSTAT & PWR_OK_MODE_MASK);
 296              		.loc 1 239 0
 297 0006 094B     		ldr	r3, .L20
 298 0008 1B68     		ldr	r3, [r3]
 299 000a DAB2     		uxtb	r2, r3
 300 000c FB1D     		adds	r3, r7, #7
 301 000e 3F21     		movs	r1, #63
 302 0010 8A43     		bics	r2, r1
 303 0012 1A70     		strb	r2, [r3]
 240:Generated_Source\PSoC4/PWR_OK_MODE.c **** 	PWR_OK_MODE_INTSTAT = maskedStatus;
 304              		.loc 1 240 0
 305 0014 054B     		ldr	r3, .L20
 306 0016 FA1D     		adds	r2, r7, #7
 307 0018 1278     		ldrb	r2, [r2]
 308 001a 1A60     		str	r2, [r3]
 241:Generated_Source\PSoC4/PWR_OK_MODE.c ****     return maskedStatus >> PWR_OK_MODE_SHIFT;
 309              		.loc 1 241 0
 310 001c FB1D     		adds	r3, r7, #7
 311 001e 1B78     		ldrb	r3, [r3]
 312 0020 9B09     		lsrs	r3, r3, #6
 313 0022 DBB2     		uxtb	r3, r3
 242:Generated_Source\PSoC4/PWR_OK_MODE.c **** }
 314              		.loc 1 242 0
 315 0024 1800     		movs	r0, r3
 316 0026 BD46     		mov	sp, r7
 317 0028 02B0     		add	sp, sp, #8
 318              		@ sp needed
 319 002a 80BD     		pop	{r7, pc}
 320              	.L21:
 321              		.align	2
 322              	.L20:
 323 002c 10030440 		.word	1074004752
 324              		.cfi_endproc
 325              	.LFE5:
 326              		.size	PWR_OK_MODE_ClearInterrupt, .-PWR_OK_MODE_ClearInterrupt
 327              		.text
 328              	.Letext0:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 11


 329              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 330              		.section	.debug_info,"",%progbits
 331              	.Ldebug_info0:
 332 0000 96010000 		.4byte	0x196
 333 0004 0400     		.2byte	0x4
 334 0006 00000000 		.4byte	.Ldebug_abbrev0
 335 000a 04       		.byte	0x4
 336 000b 01       		.uleb128 0x1
 337 000c 78000000 		.4byte	.LASF28
 338 0010 0C       		.byte	0xc
 339 0011 29020000 		.4byte	.LASF29
 340 0015 35010000 		.4byte	.LASF30
 341 0019 00000000 		.4byte	.Ldebug_ranges0+0
 342 001d 00000000 		.4byte	0
 343 0021 00000000 		.4byte	.Ldebug_line0
 344 0025 02       		.uleb128 0x2
 345 0026 01       		.byte	0x1
 346 0027 06       		.byte	0x6
 347 0028 1D020000 		.4byte	.LASF0
 348 002c 02       		.uleb128 0x2
 349 002d 01       		.byte	0x1
 350 002e 08       		.byte	0x8
 351 002f 24000000 		.4byte	.LASF1
 352 0033 02       		.uleb128 0x2
 353 0034 02       		.byte	0x2
 354 0035 05       		.byte	0x5
 355 0036 04020000 		.4byte	.LASF2
 356 003a 02       		.uleb128 0x2
 357 003b 02       		.byte	0x2
 358 003c 07       		.byte	0x7
 359 003d 65000000 		.4byte	.LASF3
 360 0041 02       		.uleb128 0x2
 361 0042 04       		.byte	0x4
 362 0043 05       		.byte	0x5
 363 0044 14020000 		.4byte	.LASF4
 364 0048 02       		.uleb128 0x2
 365 0049 04       		.byte	0x4
 366 004a 07       		.byte	0x7
 367 004b 38000000 		.4byte	.LASF5
 368 004f 02       		.uleb128 0x2
 369 0050 08       		.byte	0x8
 370 0051 05       		.byte	0x5
 371 0052 E4010000 		.4byte	.LASF6
 372 0056 02       		.uleb128 0x2
 373 0057 08       		.byte	0x8
 374 0058 07       		.byte	0x7
 375 0059 97010000 		.4byte	.LASF7
 376 005d 03       		.uleb128 0x3
 377 005e 04       		.byte	0x4
 378 005f 05       		.byte	0x5
 379 0060 696E7400 		.ascii	"int\000"
 380 0064 02       		.uleb128 0x2
 381 0065 04       		.byte	0x4
 382 0066 07       		.byte	0x7
 383 0067 8A010000 		.4byte	.LASF8
 384 006b 04       		.uleb128 0x4
 385 006c 0E020000 		.4byte	.LASF9
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 12


 386 0070 02       		.byte	0x2
 387 0071 F701     		.2byte	0x1f7
 388 0073 2C000000 		.4byte	0x2c
 389 0077 04       		.uleb128 0x4
 390 0078 1E010000 		.4byte	.LASF10
 391 007c 02       		.byte	0x2
 392 007d F801     		.2byte	0x1f8
 393 007f 3A000000 		.4byte	0x3a
 394 0083 04       		.uleb128 0x4
 395 0084 2E010000 		.4byte	.LASF11
 396 0088 02       		.byte	0x2
 397 0089 F901     		.2byte	0x1f9
 398 008b 48000000 		.4byte	0x48
 399 008f 02       		.uleb128 0x2
 400 0090 04       		.byte	0x4
 401 0091 04       		.byte	0x4
 402 0092 0C000000 		.4byte	.LASF12
 403 0096 02       		.uleb128 0x2
 404 0097 08       		.byte	0x8
 405 0098 04       		.byte	0x4
 406 0099 06010000 		.4byte	.LASF13
 407 009d 02       		.uleb128 0x2
 408 009e 01       		.byte	0x1
 409 009f 08       		.byte	0x8
 410 00a0 FF010000 		.4byte	.LASF14
 411 00a4 04       		.uleb128 0x4
 412 00a5 00000000 		.4byte	.LASF15
 413 00a9 02       		.byte	0x2
 414 00aa A302     		.2byte	0x2a3
 415 00ac B0000000 		.4byte	0xb0
 416 00b0 05       		.uleb128 0x5
 417 00b1 83000000 		.4byte	0x83
 418 00b5 06       		.uleb128 0x6
 419 00b6 B3010000 		.4byte	.LASF16
 420 00ba 01       		.byte	0x1
 421 00bb 48       		.byte	0x48
 422 00bc 00000000 		.4byte	.LFB0
 423 00c0 48000000 		.4byte	.LFE0-.LFB0
 424 00c4 01       		.uleb128 0x1
 425 00c5 9C       		.byte	0x9c
 426 00c6 D9000000 		.4byte	0xd9
 427 00ca 07       		.uleb128 0x7
 428 00cb AE010000 		.4byte	.LASF18
 429 00cf 01       		.byte	0x1
 430 00d0 48       		.byte	0x48
 431 00d1 6B000000 		.4byte	0x6b
 432 00d5 02       		.uleb128 0x2
 433 00d6 91       		.byte	0x91
 434 00d7 77       		.sleb128 -9
 435 00d8 00       		.byte	0
 436 00d9 06       		.uleb128 0x6
 437 00da 12000000 		.4byte	.LASF17
 438 00de 01       		.byte	0x1
 439 00df 70       		.byte	0x70
 440 00e0 00000000 		.4byte	.LFB1
 441 00e4 48000000 		.4byte	.LFE1-.LFB1
 442 00e8 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 13


 443 00e9 9C       		.byte	0x9c
 444 00ea 0B010000 		.4byte	0x10b
 445 00ee 07       		.uleb128 0x7
 446 00ef 06000000 		.4byte	.LASF19
 447 00f3 01       		.byte	0x1
 448 00f4 70       		.byte	0x70
 449 00f5 6B000000 		.4byte	0x6b
 450 00f9 02       		.uleb128 0x2
 451 00fa 91       		.byte	0x91
 452 00fb 6F       		.sleb128 -17
 453 00fc 08       		.uleb128 0x8
 454 00fd 32000000 		.4byte	.LASF24
 455 0101 01       		.byte	0x1
 456 0102 72       		.byte	0x72
 457 0103 6B000000 		.4byte	0x6b
 458 0107 02       		.uleb128 0x2
 459 0108 91       		.byte	0x91
 460 0109 77       		.sleb128 -9
 461 010a 00       		.byte	0
 462 010b 09       		.uleb128 0x9
 463 010c 0D010000 		.4byte	.LASF20
 464 0110 01       		.byte	0x1
 465 0111 89       		.byte	0x89
 466 0112 6B000000 		.4byte	0x6b
 467 0116 00000000 		.4byte	.LFB2
 468 011a 1C000000 		.4byte	.LFE2-.LFB2
 469 011e 01       		.uleb128 0x1
 470 011f 9C       		.byte	0x9c
 471 0120 09       		.uleb128 0x9
 472 0121 CC010000 		.4byte	.LASF21
 473 0125 01       		.byte	0x1
 474 0126 A5       		.byte	0xa5
 475 0127 6B000000 		.4byte	0x6b
 476 012b 00000000 		.4byte	.LFB3
 477 012f 1C000000 		.4byte	.LFE3-.LFB3
 478 0133 01       		.uleb128 0x1
 479 0134 9C       		.byte	0x9c
 480 0135 06       		.uleb128 0x6
 481 0136 65010000 		.4byte	.LASF22
 482 013a 01       		.byte	0x1
 483 013b D0       		.byte	0xd0
 484 013c 00000000 		.4byte	.LFB4
 485 0140 44000000 		.4byte	.LFE4-.LFB4
 486 0144 01       		.uleb128 0x1
 487 0145 9C       		.byte	0x9c
 488 0146 75010000 		.4byte	0x175
 489 014a 07       		.uleb128 0x7
 490 014b 25010000 		.4byte	.LASF23
 491 014f 01       		.byte	0x1
 492 0150 D0       		.byte	0xd0
 493 0151 77000000 		.4byte	0x77
 494 0155 02       		.uleb128 0x2
 495 0156 91       		.byte	0x91
 496 0157 6E       		.sleb128 -18
 497 0158 07       		.uleb128 0x7
 498 0159 AE010000 		.4byte	.LASF18
 499 015d 01       		.byte	0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 14


 500 015e D0       		.byte	0xd0
 501 015f 77000000 		.4byte	0x77
 502 0163 02       		.uleb128 0x2
 503 0164 91       		.byte	0x91
 504 0165 6C       		.sleb128 -20
 505 0166 08       		.uleb128 0x8
 506 0167 82010000 		.4byte	.LASF25
 507 016b 01       		.byte	0x1
 508 016c D2       		.byte	0xd2
 509 016d 83000000 		.4byte	0x83
 510 0171 02       		.uleb128 0x2
 511 0172 91       		.byte	0x91
 512 0173 74       		.sleb128 -12
 513 0174 00       		.byte	0
 514 0175 0A       		.uleb128 0xa
 515 0176 4A000000 		.4byte	.LASF26
 516 017a 01       		.byte	0x1
 517 017b ED       		.byte	0xed
 518 017c 6B000000 		.4byte	0x6b
 519 0180 00000000 		.4byte	.LFB5
 520 0184 30000000 		.4byte	.LFE5-.LFB5
 521 0188 01       		.uleb128 0x1
 522 0189 9C       		.byte	0x9c
 523 018a 08       		.uleb128 0x8
 524 018b F2010000 		.4byte	.LASF27
 525 018f 01       		.byte	0x1
 526 0190 EF       		.byte	0xef
 527 0191 6B000000 		.4byte	0x6b
 528 0195 02       		.uleb128 0x2
 529 0196 91       		.byte	0x91
 530 0197 77       		.sleb128 -9
 531 0198 00       		.byte	0
 532 0199 00       		.byte	0
 533              		.section	.debug_abbrev,"",%progbits
 534              	.Ldebug_abbrev0:
 535 0000 01       		.uleb128 0x1
 536 0001 11       		.uleb128 0x11
 537 0002 01       		.byte	0x1
 538 0003 25       		.uleb128 0x25
 539 0004 0E       		.uleb128 0xe
 540 0005 13       		.uleb128 0x13
 541 0006 0B       		.uleb128 0xb
 542 0007 03       		.uleb128 0x3
 543 0008 0E       		.uleb128 0xe
 544 0009 1B       		.uleb128 0x1b
 545 000a 0E       		.uleb128 0xe
 546 000b 55       		.uleb128 0x55
 547 000c 17       		.uleb128 0x17
 548 000d 11       		.uleb128 0x11
 549 000e 01       		.uleb128 0x1
 550 000f 10       		.uleb128 0x10
 551 0010 17       		.uleb128 0x17
 552 0011 00       		.byte	0
 553 0012 00       		.byte	0
 554 0013 02       		.uleb128 0x2
 555 0014 24       		.uleb128 0x24
 556 0015 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 15


 557 0016 0B       		.uleb128 0xb
 558 0017 0B       		.uleb128 0xb
 559 0018 3E       		.uleb128 0x3e
 560 0019 0B       		.uleb128 0xb
 561 001a 03       		.uleb128 0x3
 562 001b 0E       		.uleb128 0xe
 563 001c 00       		.byte	0
 564 001d 00       		.byte	0
 565 001e 03       		.uleb128 0x3
 566 001f 24       		.uleb128 0x24
 567 0020 00       		.byte	0
 568 0021 0B       		.uleb128 0xb
 569 0022 0B       		.uleb128 0xb
 570 0023 3E       		.uleb128 0x3e
 571 0024 0B       		.uleb128 0xb
 572 0025 03       		.uleb128 0x3
 573 0026 08       		.uleb128 0x8
 574 0027 00       		.byte	0
 575 0028 00       		.byte	0
 576 0029 04       		.uleb128 0x4
 577 002a 16       		.uleb128 0x16
 578 002b 00       		.byte	0
 579 002c 03       		.uleb128 0x3
 580 002d 0E       		.uleb128 0xe
 581 002e 3A       		.uleb128 0x3a
 582 002f 0B       		.uleb128 0xb
 583 0030 3B       		.uleb128 0x3b
 584 0031 05       		.uleb128 0x5
 585 0032 49       		.uleb128 0x49
 586 0033 13       		.uleb128 0x13
 587 0034 00       		.byte	0
 588 0035 00       		.byte	0
 589 0036 05       		.uleb128 0x5
 590 0037 35       		.uleb128 0x35
 591 0038 00       		.byte	0
 592 0039 49       		.uleb128 0x49
 593 003a 13       		.uleb128 0x13
 594 003b 00       		.byte	0
 595 003c 00       		.byte	0
 596 003d 06       		.uleb128 0x6
 597 003e 2E       		.uleb128 0x2e
 598 003f 01       		.byte	0x1
 599 0040 3F       		.uleb128 0x3f
 600 0041 19       		.uleb128 0x19
 601 0042 03       		.uleb128 0x3
 602 0043 0E       		.uleb128 0xe
 603 0044 3A       		.uleb128 0x3a
 604 0045 0B       		.uleb128 0xb
 605 0046 3B       		.uleb128 0x3b
 606 0047 0B       		.uleb128 0xb
 607 0048 27       		.uleb128 0x27
 608 0049 19       		.uleb128 0x19
 609 004a 11       		.uleb128 0x11
 610 004b 01       		.uleb128 0x1
 611 004c 12       		.uleb128 0x12
 612 004d 06       		.uleb128 0x6
 613 004e 40       		.uleb128 0x40
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 16


 614 004f 18       		.uleb128 0x18
 615 0050 9742     		.uleb128 0x2117
 616 0052 19       		.uleb128 0x19
 617 0053 01       		.uleb128 0x1
 618 0054 13       		.uleb128 0x13
 619 0055 00       		.byte	0
 620 0056 00       		.byte	0
 621 0057 07       		.uleb128 0x7
 622 0058 05       		.uleb128 0x5
 623 0059 00       		.byte	0
 624 005a 03       		.uleb128 0x3
 625 005b 0E       		.uleb128 0xe
 626 005c 3A       		.uleb128 0x3a
 627 005d 0B       		.uleb128 0xb
 628 005e 3B       		.uleb128 0x3b
 629 005f 0B       		.uleb128 0xb
 630 0060 49       		.uleb128 0x49
 631 0061 13       		.uleb128 0x13
 632 0062 02       		.uleb128 0x2
 633 0063 18       		.uleb128 0x18
 634 0064 00       		.byte	0
 635 0065 00       		.byte	0
 636 0066 08       		.uleb128 0x8
 637 0067 34       		.uleb128 0x34
 638 0068 00       		.byte	0
 639 0069 03       		.uleb128 0x3
 640 006a 0E       		.uleb128 0xe
 641 006b 3A       		.uleb128 0x3a
 642 006c 0B       		.uleb128 0xb
 643 006d 3B       		.uleb128 0x3b
 644 006e 0B       		.uleb128 0xb
 645 006f 49       		.uleb128 0x49
 646 0070 13       		.uleb128 0x13
 647 0071 02       		.uleb128 0x2
 648 0072 18       		.uleb128 0x18
 649 0073 00       		.byte	0
 650 0074 00       		.byte	0
 651 0075 09       		.uleb128 0x9
 652 0076 2E       		.uleb128 0x2e
 653 0077 00       		.byte	0
 654 0078 3F       		.uleb128 0x3f
 655 0079 19       		.uleb128 0x19
 656 007a 03       		.uleb128 0x3
 657 007b 0E       		.uleb128 0xe
 658 007c 3A       		.uleb128 0x3a
 659 007d 0B       		.uleb128 0xb
 660 007e 3B       		.uleb128 0x3b
 661 007f 0B       		.uleb128 0xb
 662 0080 27       		.uleb128 0x27
 663 0081 19       		.uleb128 0x19
 664 0082 49       		.uleb128 0x49
 665 0083 13       		.uleb128 0x13
 666 0084 11       		.uleb128 0x11
 667 0085 01       		.uleb128 0x1
 668 0086 12       		.uleb128 0x12
 669 0087 06       		.uleb128 0x6
 670 0088 40       		.uleb128 0x40
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 17


 671 0089 18       		.uleb128 0x18
 672 008a 9742     		.uleb128 0x2117
 673 008c 19       		.uleb128 0x19
 674 008d 00       		.byte	0
 675 008e 00       		.byte	0
 676 008f 0A       		.uleb128 0xa
 677 0090 2E       		.uleb128 0x2e
 678 0091 01       		.byte	0x1
 679 0092 3F       		.uleb128 0x3f
 680 0093 19       		.uleb128 0x19
 681 0094 03       		.uleb128 0x3
 682 0095 0E       		.uleb128 0xe
 683 0096 3A       		.uleb128 0x3a
 684 0097 0B       		.uleb128 0xb
 685 0098 3B       		.uleb128 0x3b
 686 0099 0B       		.uleb128 0xb
 687 009a 27       		.uleb128 0x27
 688 009b 19       		.uleb128 0x19
 689 009c 49       		.uleb128 0x49
 690 009d 13       		.uleb128 0x13
 691 009e 11       		.uleb128 0x11
 692 009f 01       		.uleb128 0x1
 693 00a0 12       		.uleb128 0x12
 694 00a1 06       		.uleb128 0x6
 695 00a2 40       		.uleb128 0x40
 696 00a3 18       		.uleb128 0x18
 697 00a4 9742     		.uleb128 0x2117
 698 00a6 19       		.uleb128 0x19
 699 00a7 00       		.byte	0
 700 00a8 00       		.byte	0
 701 00a9 00       		.byte	0
 702              		.section	.debug_aranges,"",%progbits
 703 0000 44000000 		.4byte	0x44
 704 0004 0200     		.2byte	0x2
 705 0006 00000000 		.4byte	.Ldebug_info0
 706 000a 04       		.byte	0x4
 707 000b 00       		.byte	0
 708 000c 0000     		.2byte	0
 709 000e 0000     		.2byte	0
 710 0010 00000000 		.4byte	.LFB0
 711 0014 48000000 		.4byte	.LFE0-.LFB0
 712 0018 00000000 		.4byte	.LFB1
 713 001c 48000000 		.4byte	.LFE1-.LFB1
 714 0020 00000000 		.4byte	.LFB2
 715 0024 1C000000 		.4byte	.LFE2-.LFB2
 716 0028 00000000 		.4byte	.LFB3
 717 002c 1C000000 		.4byte	.LFE3-.LFB3
 718 0030 00000000 		.4byte	.LFB4
 719 0034 44000000 		.4byte	.LFE4-.LFB4
 720 0038 00000000 		.4byte	.LFB5
 721 003c 30000000 		.4byte	.LFE5-.LFB5
 722 0040 00000000 		.4byte	0
 723 0044 00000000 		.4byte	0
 724              		.section	.debug_ranges,"",%progbits
 725              	.Ldebug_ranges0:
 726 0000 00000000 		.4byte	.LFB0
 727 0004 48000000 		.4byte	.LFE0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 18


 728 0008 00000000 		.4byte	.LFB1
 729 000c 48000000 		.4byte	.LFE1
 730 0010 00000000 		.4byte	.LFB2
 731 0014 1C000000 		.4byte	.LFE2
 732 0018 00000000 		.4byte	.LFB3
 733 001c 1C000000 		.4byte	.LFE3
 734 0020 00000000 		.4byte	.LFB4
 735 0024 44000000 		.4byte	.LFE4
 736 0028 00000000 		.4byte	.LFB5
 737 002c 30000000 		.4byte	.LFE5
 738 0030 00000000 		.4byte	0
 739 0034 00000000 		.4byte	0
 740              		.section	.debug_line,"",%progbits
 741              	.Ldebug_line0:
 742 0000 C0000000 		.section	.debug_str,"MS",%progbits,1
 742      02004800 
 742      00000201 
 742      FB0E0D00 
 742      01010101 
 743              	.LASF15:
 744 0000 72656733 		.ascii	"reg32\000"
 744      3200
 745              	.LASF19:
 746 0006 76616C75 		.ascii	"value\000"
 746      6500
 747              	.LASF12:
 748 000c 666C6F61 		.ascii	"float\000"
 748      7400
 749              	.LASF17:
 750 0012 5057525F 		.ascii	"PWR_OK_MODE_Write\000"
 750      4F4B5F4D 
 750      4F44455F 
 750      57726974 
 750      6500
 751              	.LASF1:
 752 0024 756E7369 		.ascii	"unsigned char\000"
 752      676E6564 
 752      20636861 
 752      7200
 753              	.LASF24:
 754 0032 64725661 		.ascii	"drVal\000"
 754      6C00
 755              	.LASF5:
 756 0038 6C6F6E67 		.ascii	"long unsigned int\000"
 756      20756E73 
 756      69676E65 
 756      6420696E 
 756      7400
 757              	.LASF26:
 758 004a 5057525F 		.ascii	"PWR_OK_MODE_ClearInterrupt\000"
 758      4F4B5F4D 
 758      4F44455F 
 758      436C6561 
 758      72496E74 
 759              	.LASF3:
 760 0065 73686F72 		.ascii	"short unsigned int\000"
 760      7420756E 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 19


 760      7369676E 
 760      65642069 
 760      6E7400
 761              	.LASF28:
 762 0078 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 762      43313120 
 762      352E342E 
 762      31203230 
 762      31363036 
 763 00ab 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 763      20726576 
 763      6973696F 
 763      6E203233 
 763      37373135 
 764 00de 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 764      66756E63 
 764      74696F6E 
 764      2D736563 
 764      74696F6E 
 765              	.LASF13:
 766 0106 646F7562 		.ascii	"double\000"
 766      6C6500
 767              	.LASF20:
 768 010d 5057525F 		.ascii	"PWR_OK_MODE_Read\000"
 768      4F4B5F4D 
 768      4F44455F 
 768      52656164 
 768      00
 769              	.LASF10:
 770 011e 75696E74 		.ascii	"uint16\000"
 770      313600
 771              	.LASF23:
 772 0125 706F7369 		.ascii	"position\000"
 772      74696F6E 
 772      00
 773              	.LASF11:
 774 012e 75696E74 		.ascii	"uint32\000"
 774      333200
 775              	.LASF30:
 776 0135 433A5C55 		.ascii	"C:\\Users\\Ala\\Desktop\\Cypress\\BeoM_display.cyds"
 776      73657273 
 776      5C416C61 
 776      5C446573 
 776      6B746F70 
 777 0163 6E00     		.ascii	"n\000"
 778              	.LASF22:
 779 0165 5057525F 		.ascii	"PWR_OK_MODE_SetInterruptMode\000"
 779      4F4B5F4D 
 779      4F44455F 
 779      53657449 
 779      6E746572 
 780              	.LASF25:
 781 0182 696E7472 		.ascii	"intrCfg\000"
 781      43666700 
 782              	.LASF8:
 783 018a 756E7369 		.ascii	"unsigned int\000"
 783      676E6564 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 20


 783      20696E74 
 783      00
 784              	.LASF7:
 785 0197 6C6F6E67 		.ascii	"long long unsigned int\000"
 785      206C6F6E 
 785      6720756E 
 785      7369676E 
 785      65642069 
 786              	.LASF18:
 787 01ae 6D6F6465 		.ascii	"mode\000"
 787      00
 788              	.LASF16:
 789 01b3 5057525F 		.ascii	"PWR_OK_MODE_SetDriveMode\000"
 789      4F4B5F4D 
 789      4F44455F 
 789      53657444 
 789      72697665 
 790              	.LASF21:
 791 01cc 5057525F 		.ascii	"PWR_OK_MODE_ReadDataReg\000"
 791      4F4B5F4D 
 791      4F44455F 
 791      52656164 
 791      44617461 
 792              	.LASF6:
 793 01e4 6C6F6E67 		.ascii	"long long int\000"
 793      206C6F6E 
 793      6720696E 
 793      7400
 794              	.LASF27:
 795 01f2 6D61736B 		.ascii	"maskedStatus\000"
 795      65645374 
 795      61747573 
 795      00
 796              	.LASF14:
 797 01ff 63686172 		.ascii	"char\000"
 797      00
 798              	.LASF2:
 799 0204 73686F72 		.ascii	"short int\000"
 799      7420696E 
 799      7400
 800              	.LASF9:
 801 020e 75696E74 		.ascii	"uint8\000"
 801      3800
 802              	.LASF4:
 803 0214 6C6F6E67 		.ascii	"long int\000"
 803      20696E74 
 803      00
 804              	.LASF0:
 805 021d 7369676E 		.ascii	"signed char\000"
 805      65642063 
 805      68617200 
 806              	.LASF29:
 807 0229 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWR_OK_MODE.c\000"
 807      72617465 
 807      645F536F 
 807      75726365 
 807      5C50536F 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccYEFdqC.s 			page 21


 808              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
