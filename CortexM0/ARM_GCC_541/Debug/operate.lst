ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"operate.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	RxBuffer
  20              		.bss
  21              		.align	2
  22              		.type	RxBuffer, %object
  23              		.size	RxBuffer, 28
  24              	RxBuffer:
  25 0000 00000000 		.space	28
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	TxBuffer
  27              		.align	2
  28              		.type	TxBuffer, %object
  29              		.size	TxBuffer, 3
  30              	TxBuffer:
  31 001c 000000   		.space	3
  32              		.global	dummyRxBuffer
  33              		.section	.rodata
  34              		.align	2
  35              		.type	dummyRxBuffer, %object
  36              		.size	dummyRxBuffer, 28
  37              	dummyRxBuffer:
  38 0000 00000000 		.space	28
  38      00000000 
  38      00000000 
  38      00000000 
  38      00000000 
  39              		.global	dummyTxBuffer
  40              		.align	2
  41              		.type	dummyTxBuffer, %object
  42              		.size	dummyTxBuffer, 3
  43              	dummyTxBuffer:
  44 001c 000000   		.space	3
  45              		.section	.text.SPIS_WaitForCommand,"ax",%progbits
  46              		.align	2
  47              		.global	SPIS_WaitForCommand
  48              		.code	16
  49              		.thumb_func
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 2


  50              		.type	SPIS_WaitForCommand, %function
  51              	SPIS_WaitForCommand:
  52              	.LFB32:
  53              		.file 1 "operate.c"
   1:operate.c     **** /* ========================================
   2:operate.c     ****  *
   3:operate.c     ****  * Copyright YOUR COMPANY, THE YEAR
   4:operate.c     ****  * All Rights Reserved
   5:operate.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:operate.c     ****  *
   7:operate.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:operate.c     ****  * WHICH IS THE PROPERTY OF your company.
   9:operate.c     ****  *
  10:operate.c     ****  * ========================================
  11:operate.c     **** */
  12:operate.c     **** 
  13:operate.c     **** #include <project.h>
  14:operate.c     **** #include <modes.h>
  15:operate.c     **** #include <operate.h>
  16:operate.c     **** 
  17:operate.c     **** // This dummy buffer used by SPIS when it receives command packet.
  18:operate.c     **** uint8 RxBuffer[RxPACKET_SIZE] = {0};
  19:operate.c     **** uint8 TxBuffer[TxPACKET_SIZE] = {0};
  20:operate.c     **** 
  21:operate.c     **** // This dummy buffer used by SPI Slave when it receives data packet.
  22:operate.c     **** const uint8 dummyRxBuffer[RxPACKET_SIZE] = {0};
  23:operate.c     **** // This dummy buffer used by SPI Slave when it transmitts status packet.
  24:operate.c     **** const uint8 dummyTxBuffer[TxPACKET_SIZE] = {0};
  25:operate.c     **** 
  26:operate.c     **** 
  27:operate.c     **** 
  28:operate.c     **** /*******************************************************************************
  29:operate.c     **** * Function Name: SPIS_WaitForCommand
  30:operate.c     **** ********************************************************************************
  31:operate.c     **** * Summary:
  32:operate.c     **** *  SPIS waits for completion of the transfer initiated by the SPIM. After packet
  33:operate.c     **** *  reception the format of the packet is verified and the command is returned.
  34:operate.c     **** *  If the format of the packet is invalid the unknown command is returned.
  35:operate.c     **** *
  36:operate.c     **** * Parameters:
  37:operate.c     **** *  None
  38:operate.c     **** *
  39:operate.c     **** * Return:
  40:operate.c     **** *  Returns command from the received packet.
  41:operate.c     **** *
  42:operate.c     **** *******************************************************************************/
  43:operate.c     **** uint8 SPIS_WaitForCommand(uint8 *RxBuffer)
  44:operate.c     **** {
  54              		.loc 1 44 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 40
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 90B5     		push	{r4, r7, lr}
  59              		.cfi_def_cfa_offset 12
  60              		.cfi_offset 4, -12
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 3


  63 0002 8BB0     		sub	sp, sp, #44
  64              		.cfi_def_cfa_offset 56
  65 0004 00AF     		add	r7, sp, #0
  66              		.cfi_def_cfa_register 7
  67 0006 7860     		str	r0, [r7, #4]
  45:operate.c     ****     uint8 tmpBuffer[RxPACKET_SIZE];
  46:operate.c     ****     uint32 i;
  47:operate.c     ****     
  48:operate.c     **** // Wait for the end of the transfer
  49:operate.c     ****     while ((RxPACKET_SIZE > SPIS_SpiUartGetRxBufferSize()) & (RxPACKET_SIZE < SPIS_SpiUartGetRxBuff
  68              		.loc 1 49 0
  69 0008 C046     		nop
  70              	.L2:
  71              		.loc 1 49 0 is_stmt 0 discriminator 1
  72 000a FFF7FEFF 		bl	SPIS_SpiUartGetRxBufferSize
  73 000e 0100     		movs	r1, r0
  74 0010 1B22     		movs	r2, #27
  75 0012 0023     		movs	r3, #0
  76 0014 8A42     		cmp	r2, r1
  77 0016 5B41     		adcs	r3, r3, r3
  78 0018 DCB2     		uxtb	r4, r3
  79 001a FFF7FEFF 		bl	SPIS_SpiUartGetRxBufferSize
  80 001e 0200     		movs	r2, r0
  81 0020 1C23     		movs	r3, #28
  82 0022 9342     		cmp	r3, r2
  83 0024 9B41     		sbcs	r3, r3, r3
  84 0026 5B42     		rsbs	r3, r3, #0
  85 0028 DBB2     		uxtb	r3, r3
  86 002a 2340     		ands	r3, r4
  87 002c DBB2     		uxtb	r3, r3
  88 002e 002B     		cmp	r3, #0
  89 0030 EBD1     		bne	.L2
  50:operate.c     ****     {
  51:operate.c     ****     }
  52:operate.c     ****         
  53:operate.c     **** // Read packet from the buffer
  54:operate.c     ****     i = 0u;
  90              		.loc 1 54 0 is_stmt 1
  91 0032 0023     		movs	r3, #0
  92 0034 7B62     		str	r3, [r7, #36]
  55:operate.c     ****     while (0u != SPIS_SpiUartGetRxBufferSize())
  93              		.loc 1 55 0
  94 0036 0CE0     		b	.L3
  95              	.L4:
  56:operate.c     ****     {
  57:operate.c     ****         tmpBuffer[i] = SPIS_SpiUartReadRxData();
  96              		.loc 1 57 0
  97 0038 FFF7FEFF 		bl	SPIS_SpiUartReadRxData
  98 003c 0300     		movs	r3, r0
  99 003e D9B2     		uxtb	r1, r3
 100 0040 0823     		movs	r3, #8
 101 0042 FA18     		adds	r2, r7, r3
 102 0044 7B6A     		ldr	r3, [r7, #36]
 103 0046 D318     		adds	r3, r2, r3
 104 0048 0A1C     		adds	r2, r1, #0
 105 004a 1A70     		strb	r2, [r3]
  58:operate.c     ****         i++;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 4


 106              		.loc 1 58 0
 107 004c 7B6A     		ldr	r3, [r7, #36]
 108 004e 0133     		adds	r3, r3, #1
 109 0050 7B62     		str	r3, [r7, #36]
 110              	.L3:
  55:operate.c     ****     while (0u != SPIS_SpiUartGetRxBufferSize())
 111              		.loc 1 55 0
 112 0052 FFF7FEFF 		bl	SPIS_SpiUartGetRxBufferSize
 113 0056 031E     		subs	r3, r0, #0
 114 0058 EED1     		bne	.L4
  59:operate.c     ****     }
  60:operate.c     **** 
  61:operate.c     **** // Check start and end of packet markers
  62:operate.c     ****     if ((tmpBuffer[RxPACKET_SOP_POS] == PACKET_SOP) &&
 115              		.loc 1 62 0
 116 005a 0823     		movs	r3, #8
 117 005c FB18     		adds	r3, r7, r3
 118 005e 1B78     		ldrb	r3, [r3]
 119 0060 012B     		cmp	r3, #1
 120 0062 19D1     		bne	.L5
  63:operate.c     ****         (tmpBuffer[RxPACKET_EOP_POS] == PACKET_EOP))
 121              		.loc 1 63 0 discriminator 1
 122 0064 0823     		movs	r3, #8
 123 0066 FB18     		adds	r3, r7, r3
 124 0068 DB7E     		ldrb	r3, [r3, #27]
  62:operate.c     ****         (tmpBuffer[RxPACKET_EOP_POS] == PACKET_EOP))
 125              		.loc 1 62 0 discriminator 1
 126 006a 172B     		cmp	r3, #23
 127 006c 14D1     		bne	.L5
  64:operate.c     ****     {
  65:operate.c     **** // Return table stripped out of start and stop markers
  66:operate.c     **** // data only is returned 24 characters plus 2 control words
  67:operate.c     ****         for (i = 1; i<RxPACKET_SIZE; i++)
 128              		.loc 1 67 0
 129 006e 0123     		movs	r3, #1
 130 0070 7B62     		str	r3, [r7, #36]
 131 0072 0CE0     		b	.L6
 132              	.L7:
  68:operate.c     ****         {
  69:operate.c     ****             RxBuffer[i-1] = (tmpBuffer[i]);
 133              		.loc 1 69 0 discriminator 3
 134 0074 7B6A     		ldr	r3, [r7, #36]
 135 0076 013B     		subs	r3, r3, #1
 136 0078 7A68     		ldr	r2, [r7, #4]
 137 007a D318     		adds	r3, r2, r3
 138 007c 0822     		movs	r2, #8
 139 007e B918     		adds	r1, r7, r2
 140 0080 7A6A     		ldr	r2, [r7, #36]
 141 0082 8A18     		adds	r2, r1, r2
 142 0084 1278     		ldrb	r2, [r2]
 143 0086 1A70     		strb	r2, [r3]
  67:operate.c     ****         {
 144              		.loc 1 67 0 discriminator 3
 145 0088 7B6A     		ldr	r3, [r7, #36]
 146 008a 0133     		adds	r3, r3, #1
 147 008c 7B62     		str	r3, [r7, #36]
 148              	.L6:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 5


  67:operate.c     ****         {
 149              		.loc 1 67 0 is_stmt 0 discriminator 1
 150 008e 7B6A     		ldr	r3, [r7, #36]
 151 0090 1B2B     		cmp	r3, #27
 152 0092 EFD9     		bls	.L7
  70:operate.c     ****         }
  71:operate.c     ****         return 1;
 153              		.loc 1 71 0 is_stmt 1
 154 0094 0123     		movs	r3, #1
 155 0096 00E0     		b	.L9
 156              	.L5:
  72:operate.c     ****     }
  73:operate.c     **** // Incorrect packet format or not data - return 0
  74:operate.c     ****     else
  75:operate.c     ****         {
  76:operate.c     ****             return 0;        
 157              		.loc 1 76 0
 158 0098 0023     		movs	r3, #0
 159              	.L9:
  77:operate.c     ****         }
  78:operate.c     **** }
 160              		.loc 1 78 0 discriminator 1
 161 009a 1800     		movs	r0, r3
 162 009c BD46     		mov	sp, r7
 163 009e 0BB0     		add	sp, sp, #44
 164              		@ sp needed
 165 00a0 90BD     		pop	{r4, r7, pc}
 166              		.cfi_endproc
 167              	.LFE32:
 168              		.size	SPIS_WaitForCommand, .-SPIS_WaitForCommand
 169 00a2 C046     		.section	.text.SPIS_CleanupAfterRead,"ax",%progbits
 170              		.align	2
 171              		.global	SPIS_CleanupAfterRead
 172              		.code	16
 173              		.thumb_func
 174              		.type	SPIS_CleanupAfterRead, %function
 175              	SPIS_CleanupAfterRead:
 176              	.LFB33:
  79:operate.c     **** 
  80:operate.c     **** 
  81:operate.c     **** /*******************************************************************************
  82:operate.c     **** * Function Name: SPIS_CleanupAfterRead
  83:operate.c     **** ********************************************************************************
  84:operate.c     **** * Summary:
  85:operate.c     **** *  SPIS waits for completion of the read transfer initiated by the SPIM. The
  86:operate.c     **** *  received packet is discarded as it contains only dummy data. Then the SPIS
  87:operate.c     **** *  prepares for the following command packet by putting dummy bytes into the
  88:operate.c     **** *  TX buffer.
  89:operate.c     **** *
  90:operate.c     **** * Parameters:
  91:operate.c     **** *  None
  92:operate.c     **** *
  93:operate.c     **** * Return:
  94:operate.c     **** *  None
  95:operate.c     **** *
  96:operate.c     **** *******************************************************************************/
  97:operate.c     **** void SPIS_CleanupAfterRead(void)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 6


  98:operate.c     **** {
 177              		.loc 1 98 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0000 B0B5     		push	{r4, r5, r7, lr}
 182              		.cfi_def_cfa_offset 16
 183              		.cfi_offset 4, -16
 184              		.cfi_offset 5, -12
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
  99:operate.c     **** // Wait for the end of the transfer
 100:operate.c     ****     while ( (RxPACKET_SIZE > SPIS_SpiUartGetRxBufferSize()) & 
 189              		.loc 1 100 0
 190 0004 C046     		nop
 191              	.L11:
 192              		.loc 1 100 0 is_stmt 0 discriminator 1
 193 0006 FFF7FEFF 		bl	SPIS_SpiUartGetRxBufferSize
 194 000a 0100     		movs	r1, r0
 195 000c 1B22     		movs	r2, #27
 196 000e 0023     		movs	r3, #0
 197 0010 8A42     		cmp	r2, r1
 198 0012 5B41     		adcs	r3, r3, r3
 199 0014 DCB2     		uxtb	r4, r3
 101:operate.c     ****             (RxPACKET_SIZE < SPIS_SpiUartGetRxBufferSize()) )
 200              		.loc 1 101 0 is_stmt 1 discriminator 1
 201 0016 FFF7FEFF 		bl	SPIS_SpiUartGetRxBufferSize
 202 001a 0200     		movs	r2, r0
 100:operate.c     ****             (RxPACKET_SIZE < SPIS_SpiUartGetRxBufferSize()) )
 203              		.loc 1 100 0 discriminator 1
 204 001c 1C23     		movs	r3, #28
 205 001e 9342     		cmp	r3, r2
 206 0020 9B41     		sbcs	r3, r3, r3
 207 0022 5B42     		rsbs	r3, r3, #0
 208 0024 DBB2     		uxtb	r3, r3
 209 0026 2340     		ands	r3, r4
 210 0028 DBB2     		uxtb	r3, r3
 211 002a 002B     		cmp	r3, #0
 212 002c EBD1     		bne	.L11
 102:operate.c     ****     {
 103:operate.c     ****     }
 104:operate.c     **** 
 105:operate.c     **** // Clear RX buffer from dummy bytes
 106:operate.c     ****     SPIS_SpiUartClearRxBuffer();
 213              		.loc 1 106 0
 214 002e FFF7FEFF 		bl	SPIS_SpiUartClearRxBuffer
 107:operate.c     **** // Put dummy data into TX buffer to be transmitted to SPIM
 108:operate.c     ****     SPIS_SpiUartPutArray(dummyTxBuffer, TxPACKET_SIZE);
 215              		.loc 1 108 0
 216 0032 044B     		ldr	r3, .L12
 217 0034 0321     		movs	r1, #3
 218 0036 1800     		movs	r0, r3
 219 0038 FFF7FEFF 		bl	SPIS_SpiUartPutArray
 109:operate.c     **** }
 220              		.loc 1 109 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 7


 221 003c C046     		nop
 222 003e BD46     		mov	sp, r7
 223              		@ sp needed
 224 0040 B0BD     		pop	{r4, r5, r7, pc}
 225              	.L13:
 226 0042 C046     		.align	2
 227              	.L12:
 228 0044 00000000 		.word	dummyTxBuffer
 229              		.cfi_endproc
 230              	.LFE33:
 231              		.size	SPIS_CleanupAfterRead, .-SPIS_CleanupAfterRead
 232              		.section	.text.SPIS_UpdateStatus,"ax",%progbits
 233              		.align	2
 234              		.global	SPIS_UpdateStatus
 235              		.code	16
 236              		.thumb_func
 237              		.type	SPIS_UpdateStatus, %function
 238              	SPIS_UpdateStatus:
 239              	.LFB34:
 110:operate.c     **** 
 111:operate.c     **** 
 112:operate.c     **** /*******************************************************************************
 113:operate.c     **** * Function Name: SPIS_UpdateStatus
 114:operate.c     **** ********************************************************************************
 115:operate.c     **** * Summary:
 116:operate.c     **** *  SPIS copies packet with response into the buffer.
 117:operate.c     **** *
 118:operate.c     **** * Parameters:
 119:operate.c     **** *  status - status to insert into the response packet.
 120:operate.c     **** *
 121:operate.c     **** * Return:
 122:operate.c     **** *  None
 123:operate.c     **** *
 124:operate.c     **** *******************************************************************************/
 125:operate.c     **** void SPIS_UpdateStatus(uint32 status)
 126:operate.c     **** {
 240              		.loc 1 126 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
 127:operate.c     ****     SPIS_SpiUartClearTxBuffer();
 253              		.loc 1 127 0
 254 0008 FFF7FEFF 		bl	SPIS_SpiUartClearTxBuffer
 128:operate.c     ****     static uint8 sTxBuffer[TxPACKET_SIZE] = {PACKET_SOP, 0x00, PACKET_EOP};
 129:operate.c     **** 
 130:operate.c     ****     sTxBuffer[TxPACKET_STS_POS] = (uint8) status;
 255              		.loc 1 130 0
 256 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 8


 257 000e DAB2     		uxtb	r2, r3
 258 0010 054B     		ldr	r3, .L15
 259 0012 5A70     		strb	r2, [r3, #1]
 131:operate.c     **** // Put data into the slave TX buffer to be transferred while following
 132:operate.c     **** // master access.
 133:operate.c     ****     SPIS_SpiUartPutArray(sTxBuffer, TxPACKET_SIZE);
 260              		.loc 1 133 0
 261 0014 044B     		ldr	r3, .L15
 262 0016 0321     		movs	r1, #3
 263 0018 1800     		movs	r0, r3
 264 001a FFF7FEFF 		bl	SPIS_SpiUartPutArray
 134:operate.c     **** }
 265              		.loc 1 134 0
 266 001e C046     		nop
 267 0020 BD46     		mov	sp, r7
 268 0022 02B0     		add	sp, sp, #8
 269              		@ sp needed
 270 0024 80BD     		pop	{r7, pc}
 271              	.L16:
 272 0026 C046     		.align	2
 273              	.L15:
 274 0028 00000000 		.word	sTxBuffer.5665
 275              		.cfi_endproc
 276              	.LFE34:
 277              		.size	SPIS_UpdateStatus, .-SPIS_UpdateStatus
 278              		.data
 279              		.align	2
 280              		.type	sTxBuffer.5665, %object
 281              		.size	sTxBuffer.5665, 3
 282              	sTxBuffer.5665:
 283 0000 01       		.byte	1
 284 0001 00       		.byte	0
 285 0002 17       		.byte	23
 286              		.text
 287              	.Letext0:
 288              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 289              		.section	.debug_info,"",%progbits
 290              	.Ldebug_info0:
 291 0000 C4010000 		.4byte	0x1c4
 292 0004 0400     		.2byte	0x4
 293 0006 00000000 		.4byte	.Ldebug_abbrev0
 294 000a 04       		.byte	0x4
 295 000b 01       		.uleb128 0x1
 296 000c 95000000 		.4byte	.LASF23
 297 0010 0C       		.byte	0xc
 298 0011 C8010000 		.4byte	.LASF24
 299 0015 3B010000 		.4byte	.LASF25
 300 0019 00000000 		.4byte	.Ldebug_ranges0+0
 301 001d 00000000 		.4byte	0
 302 0021 00000000 		.4byte	.Ldebug_line0
 303 0025 02       		.uleb128 0x2
 304 0026 01       		.byte	0x1
 305 0027 06       		.byte	0x6
 306 0028 E7010000 		.4byte	.LASF0
 307 002c 02       		.uleb128 0x2
 308 002d 01       		.byte	0x1
 309 002e 08       		.byte	0x8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 9


 310 002f 59000000 		.4byte	.LASF1
 311 0033 02       		.uleb128 0x2
 312 0034 02       		.byte	0x2
 313 0035 05       		.byte	0x5
 314 0036 2A010000 		.4byte	.LASF2
 315 003a 02       		.uleb128 0x2
 316 003b 02       		.byte	0x2
 317 003c 07       		.byte	0x7
 318 003d 30000000 		.4byte	.LASF3
 319 0041 02       		.uleb128 0x2
 320 0042 04       		.byte	0x4
 321 0043 05       		.byte	0x5
 322 0044 D2010000 		.4byte	.LASF4
 323 0048 02       		.uleb128 0x2
 324 0049 04       		.byte	0x4
 325 004a 07       		.byte	0x7
 326 004b 67000000 		.4byte	.LASF5
 327 004f 02       		.uleb128 0x2
 328 0050 08       		.byte	0x8
 329 0051 05       		.byte	0x5
 330 0052 AC010000 		.4byte	.LASF6
 331 0056 02       		.uleb128 0x2
 332 0057 08       		.byte	0x8
 333 0058 07       		.byte	0x7
 334 0059 82010000 		.4byte	.LASF7
 335 005d 03       		.uleb128 0x3
 336 005e 04       		.byte	0x4
 337 005f 05       		.byte	0x5
 338 0060 696E7400 		.ascii	"int\000"
 339 0064 02       		.uleb128 0x2
 340 0065 04       		.byte	0x4
 341 0066 07       		.byte	0x7
 342 0067 6B010000 		.4byte	.LASF8
 343 006b 04       		.uleb128 0x4
 344 006c 8F000000 		.4byte	.LASF9
 345 0070 02       		.byte	0x2
 346 0071 F701     		.2byte	0x1f7
 347 0073 2C000000 		.4byte	0x2c
 348 0077 04       		.uleb128 0x4
 349 0078 34010000 		.4byte	.LASF10
 350 007c 02       		.byte	0x2
 351 007d F901     		.2byte	0x1f9
 352 007f 48000000 		.4byte	0x48
 353 0083 02       		.uleb128 0x2
 354 0084 04       		.byte	0x4
 355 0085 04       		.byte	0x4
 356 0086 4A000000 		.4byte	.LASF11
 357 008a 02       		.uleb128 0x2
 358 008b 08       		.byte	0x8
 359 008c 04       		.byte	0x4
 360 008d 23010000 		.4byte	.LASF12
 361 0091 02       		.uleb128 0x2
 362 0092 01       		.byte	0x1
 363 0093 08       		.byte	0x8
 364 0094 BA010000 		.4byte	.LASF13
 365 0098 02       		.uleb128 0x2
 366 0099 08       		.byte	0x8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 10


 367 009a 04       		.byte	0x4
 368 009b DB010000 		.4byte	.LASF14
 369 009f 02       		.uleb128 0x2
 370 00a0 04       		.byte	0x4
 371 00a1 07       		.byte	0x7
 372 00a2 A3010000 		.4byte	.LASF15
 373 00a6 05       		.uleb128 0x5
 374 00a7 04       		.byte	0x4
 375 00a8 6B000000 		.4byte	0x6b
 376 00ac 06       		.uleb128 0x6
 377 00ad 1C000000 		.4byte	.LASF26
 378 00b1 01       		.byte	0x1
 379 00b2 2B       		.byte	0x2b
 380 00b3 6B000000 		.4byte	0x6b
 381 00b7 00000000 		.4byte	.LFB32
 382 00bb A2000000 		.4byte	.LFE32-.LFB32
 383 00bf 01       		.uleb128 0x1
 384 00c0 9C       		.byte	0x9c
 385 00c1 EE000000 		.4byte	0xee
 386 00c5 07       		.uleb128 0x7
 387 00c6 50000000 		.4byte	.LASF17
 388 00ca 01       		.byte	0x1
 389 00cb 2B       		.byte	0x2b
 390 00cc A6000000 		.4byte	0xa6
 391 00d0 02       		.uleb128 0x2
 392 00d1 91       		.byte	0x91
 393 00d2 4C       		.sleb128 -52
 394 00d3 08       		.uleb128 0x8
 395 00d4 99010000 		.4byte	.LASF16
 396 00d8 01       		.byte	0x1
 397 00d9 2D       		.byte	0x2d
 398 00da EE000000 		.4byte	0xee
 399 00de 02       		.uleb128 0x2
 400 00df 91       		.byte	0x91
 401 00e0 50       		.sleb128 -48
 402 00e1 09       		.uleb128 0x9
 403 00e2 6900     		.ascii	"i\000"
 404 00e4 01       		.byte	0x1
 405 00e5 2E       		.byte	0x2e
 406 00e6 77000000 		.4byte	0x77
 407 00ea 02       		.uleb128 0x2
 408 00eb 91       		.byte	0x91
 409 00ec 6C       		.sleb128 -20
 410 00ed 00       		.byte	0
 411 00ee 0A       		.uleb128 0xa
 412 00ef 6B000000 		.4byte	0x6b
 413 00f3 FE000000 		.4byte	0xfe
 414 00f7 0B       		.uleb128 0xb
 415 00f8 9F000000 		.4byte	0x9f
 416 00fc 1B       		.byte	0x1b
 417 00fd 00       		.byte	0
 418 00fe 0C       		.uleb128 0xc
 419 00ff 79000000 		.4byte	.LASF27
 420 0103 01       		.byte	0x1
 421 0104 61       		.byte	0x61
 422 0105 00000000 		.4byte	.LFB33
 423 0109 48000000 		.4byte	.LFE33-.LFB33
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 11


 424 010d 01       		.uleb128 0x1
 425 010e 9C       		.byte	0x9c
 426 010f 0D       		.uleb128 0xd
 427 0110 F3010000 		.4byte	.LASF28
 428 0114 01       		.byte	0x1
 429 0115 7D       		.byte	0x7d
 430 0116 00000000 		.4byte	.LFB34
 431 011a 2C000000 		.4byte	.LFE34-.LFB34
 432 011e 01       		.uleb128 0x1
 433 011f 9C       		.byte	0x9c
 434 0120 44010000 		.4byte	0x144
 435 0124 07       		.uleb128 0x7
 436 0125 43000000 		.4byte	.LASF18
 437 0129 01       		.byte	0x1
 438 012a 7D       		.byte	0x7d
 439 012b 77000000 		.4byte	0x77
 440 012f 02       		.uleb128 0x2
 441 0130 91       		.byte	0x91
 442 0131 74       		.sleb128 -12
 443 0132 08       		.uleb128 0x8
 444 0133 78010000 		.4byte	.LASF19
 445 0137 01       		.byte	0x1
 446 0138 80       		.byte	0x80
 447 0139 44010000 		.4byte	0x144
 448 013d 05       		.uleb128 0x5
 449 013e 03       		.byte	0x3
 450 013f 00000000 		.4byte	sTxBuffer.5665
 451 0143 00       		.byte	0
 452 0144 0A       		.uleb128 0xa
 453 0145 6B000000 		.4byte	0x6b
 454 0149 54010000 		.4byte	0x154
 455 014d 0B       		.uleb128 0xb
 456 014e 9F000000 		.4byte	0x9f
 457 0152 02       		.byte	0x2
 458 0153 00       		.byte	0
 459 0154 0E       		.uleb128 0xe
 460 0155 50000000 		.4byte	.LASF17
 461 0159 01       		.byte	0x1
 462 015a 12       		.byte	0x12
 463 015b EE000000 		.4byte	0xee
 464 015f 05       		.uleb128 0x5
 465 0160 03       		.byte	0x3
 466 0161 00000000 		.4byte	RxBuffer
 467 0165 0E       		.uleb128 0xe
 468 0166 BF010000 		.4byte	.LASF20
 469 016a 01       		.byte	0x1
 470 016b 13       		.byte	0x13
 471 016c 44010000 		.4byte	0x144
 472 0170 05       		.uleb128 0x5
 473 0171 03       		.byte	0x3
 474 0172 00000000 		.4byte	TxBuffer
 475 0176 0A       		.uleb128 0xa
 476 0177 86010000 		.4byte	0x186
 477 017b 86010000 		.4byte	0x186
 478 017f 0B       		.uleb128 0xb
 479 0180 9F000000 		.4byte	0x9f
 480 0184 1B       		.byte	0x1b
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 12


 481 0185 00       		.byte	0
 482 0186 0F       		.uleb128 0xf
 483 0187 6B000000 		.4byte	0x6b
 484 018b 0E       		.uleb128 0xe
 485 018c 0E000000 		.4byte	.LASF21
 486 0190 01       		.byte	0x1
 487 0191 16       		.byte	0x16
 488 0192 9C010000 		.4byte	0x19c
 489 0196 05       		.uleb128 0x5
 490 0197 03       		.byte	0x3
 491 0198 00000000 		.4byte	dummyRxBuffer
 492 019c 0F       		.uleb128 0xf
 493 019d 76010000 		.4byte	0x176
 494 01a1 0A       		.uleb128 0xa
 495 01a2 86010000 		.4byte	0x186
 496 01a6 B1010000 		.4byte	0x1b1
 497 01aa 0B       		.uleb128 0xb
 498 01ab 9F000000 		.4byte	0x9f
 499 01af 02       		.byte	0x2
 500 01b0 00       		.byte	0
 501 01b1 0E       		.uleb128 0xe
 502 01b2 00000000 		.4byte	.LASF22
 503 01b6 01       		.byte	0x1
 504 01b7 18       		.byte	0x18
 505 01b8 C2010000 		.4byte	0x1c2
 506 01bc 05       		.uleb128 0x5
 507 01bd 03       		.byte	0x3
 508 01be 00000000 		.4byte	dummyTxBuffer
 509 01c2 0F       		.uleb128 0xf
 510 01c3 A1010000 		.4byte	0x1a1
 511 01c7 00       		.byte	0
 512              		.section	.debug_abbrev,"",%progbits
 513              	.Ldebug_abbrev0:
 514 0000 01       		.uleb128 0x1
 515 0001 11       		.uleb128 0x11
 516 0002 01       		.byte	0x1
 517 0003 25       		.uleb128 0x25
 518 0004 0E       		.uleb128 0xe
 519 0005 13       		.uleb128 0x13
 520 0006 0B       		.uleb128 0xb
 521 0007 03       		.uleb128 0x3
 522 0008 0E       		.uleb128 0xe
 523 0009 1B       		.uleb128 0x1b
 524 000a 0E       		.uleb128 0xe
 525 000b 55       		.uleb128 0x55
 526 000c 17       		.uleb128 0x17
 527 000d 11       		.uleb128 0x11
 528 000e 01       		.uleb128 0x1
 529 000f 10       		.uleb128 0x10
 530 0010 17       		.uleb128 0x17
 531 0011 00       		.byte	0
 532 0012 00       		.byte	0
 533 0013 02       		.uleb128 0x2
 534 0014 24       		.uleb128 0x24
 535 0015 00       		.byte	0
 536 0016 0B       		.uleb128 0xb
 537 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 13


 538 0018 3E       		.uleb128 0x3e
 539 0019 0B       		.uleb128 0xb
 540 001a 03       		.uleb128 0x3
 541 001b 0E       		.uleb128 0xe
 542 001c 00       		.byte	0
 543 001d 00       		.byte	0
 544 001e 03       		.uleb128 0x3
 545 001f 24       		.uleb128 0x24
 546 0020 00       		.byte	0
 547 0021 0B       		.uleb128 0xb
 548 0022 0B       		.uleb128 0xb
 549 0023 3E       		.uleb128 0x3e
 550 0024 0B       		.uleb128 0xb
 551 0025 03       		.uleb128 0x3
 552 0026 08       		.uleb128 0x8
 553 0027 00       		.byte	0
 554 0028 00       		.byte	0
 555 0029 04       		.uleb128 0x4
 556 002a 16       		.uleb128 0x16
 557 002b 00       		.byte	0
 558 002c 03       		.uleb128 0x3
 559 002d 0E       		.uleb128 0xe
 560 002e 3A       		.uleb128 0x3a
 561 002f 0B       		.uleb128 0xb
 562 0030 3B       		.uleb128 0x3b
 563 0031 05       		.uleb128 0x5
 564 0032 49       		.uleb128 0x49
 565 0033 13       		.uleb128 0x13
 566 0034 00       		.byte	0
 567 0035 00       		.byte	0
 568 0036 05       		.uleb128 0x5
 569 0037 0F       		.uleb128 0xf
 570 0038 00       		.byte	0
 571 0039 0B       		.uleb128 0xb
 572 003a 0B       		.uleb128 0xb
 573 003b 49       		.uleb128 0x49
 574 003c 13       		.uleb128 0x13
 575 003d 00       		.byte	0
 576 003e 00       		.byte	0
 577 003f 06       		.uleb128 0x6
 578 0040 2E       		.uleb128 0x2e
 579 0041 01       		.byte	0x1
 580 0042 3F       		.uleb128 0x3f
 581 0043 19       		.uleb128 0x19
 582 0044 03       		.uleb128 0x3
 583 0045 0E       		.uleb128 0xe
 584 0046 3A       		.uleb128 0x3a
 585 0047 0B       		.uleb128 0xb
 586 0048 3B       		.uleb128 0x3b
 587 0049 0B       		.uleb128 0xb
 588 004a 27       		.uleb128 0x27
 589 004b 19       		.uleb128 0x19
 590 004c 49       		.uleb128 0x49
 591 004d 13       		.uleb128 0x13
 592 004e 11       		.uleb128 0x11
 593 004f 01       		.uleb128 0x1
 594 0050 12       		.uleb128 0x12
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 14


 595 0051 06       		.uleb128 0x6
 596 0052 40       		.uleb128 0x40
 597 0053 18       		.uleb128 0x18
 598 0054 9642     		.uleb128 0x2116
 599 0056 19       		.uleb128 0x19
 600 0057 01       		.uleb128 0x1
 601 0058 13       		.uleb128 0x13
 602 0059 00       		.byte	0
 603 005a 00       		.byte	0
 604 005b 07       		.uleb128 0x7
 605 005c 05       		.uleb128 0x5
 606 005d 00       		.byte	0
 607 005e 03       		.uleb128 0x3
 608 005f 0E       		.uleb128 0xe
 609 0060 3A       		.uleb128 0x3a
 610 0061 0B       		.uleb128 0xb
 611 0062 3B       		.uleb128 0x3b
 612 0063 0B       		.uleb128 0xb
 613 0064 49       		.uleb128 0x49
 614 0065 13       		.uleb128 0x13
 615 0066 02       		.uleb128 0x2
 616 0067 18       		.uleb128 0x18
 617 0068 00       		.byte	0
 618 0069 00       		.byte	0
 619 006a 08       		.uleb128 0x8
 620 006b 34       		.uleb128 0x34
 621 006c 00       		.byte	0
 622 006d 03       		.uleb128 0x3
 623 006e 0E       		.uleb128 0xe
 624 006f 3A       		.uleb128 0x3a
 625 0070 0B       		.uleb128 0xb
 626 0071 3B       		.uleb128 0x3b
 627 0072 0B       		.uleb128 0xb
 628 0073 49       		.uleb128 0x49
 629 0074 13       		.uleb128 0x13
 630 0075 02       		.uleb128 0x2
 631 0076 18       		.uleb128 0x18
 632 0077 00       		.byte	0
 633 0078 00       		.byte	0
 634 0079 09       		.uleb128 0x9
 635 007a 34       		.uleb128 0x34
 636 007b 00       		.byte	0
 637 007c 03       		.uleb128 0x3
 638 007d 08       		.uleb128 0x8
 639 007e 3A       		.uleb128 0x3a
 640 007f 0B       		.uleb128 0xb
 641 0080 3B       		.uleb128 0x3b
 642 0081 0B       		.uleb128 0xb
 643 0082 49       		.uleb128 0x49
 644 0083 13       		.uleb128 0x13
 645 0084 02       		.uleb128 0x2
 646 0085 18       		.uleb128 0x18
 647 0086 00       		.byte	0
 648 0087 00       		.byte	0
 649 0088 0A       		.uleb128 0xa
 650 0089 01       		.uleb128 0x1
 651 008a 01       		.byte	0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 15


 652 008b 49       		.uleb128 0x49
 653 008c 13       		.uleb128 0x13
 654 008d 01       		.uleb128 0x1
 655 008e 13       		.uleb128 0x13
 656 008f 00       		.byte	0
 657 0090 00       		.byte	0
 658 0091 0B       		.uleb128 0xb
 659 0092 21       		.uleb128 0x21
 660 0093 00       		.byte	0
 661 0094 49       		.uleb128 0x49
 662 0095 13       		.uleb128 0x13
 663 0096 2F       		.uleb128 0x2f
 664 0097 0B       		.uleb128 0xb
 665 0098 00       		.byte	0
 666 0099 00       		.byte	0
 667 009a 0C       		.uleb128 0xc
 668 009b 2E       		.uleb128 0x2e
 669 009c 00       		.byte	0
 670 009d 3F       		.uleb128 0x3f
 671 009e 19       		.uleb128 0x19
 672 009f 03       		.uleb128 0x3
 673 00a0 0E       		.uleb128 0xe
 674 00a1 3A       		.uleb128 0x3a
 675 00a2 0B       		.uleb128 0xb
 676 00a3 3B       		.uleb128 0x3b
 677 00a4 0B       		.uleb128 0xb
 678 00a5 27       		.uleb128 0x27
 679 00a6 19       		.uleb128 0x19
 680 00a7 11       		.uleb128 0x11
 681 00a8 01       		.uleb128 0x1
 682 00a9 12       		.uleb128 0x12
 683 00aa 06       		.uleb128 0x6
 684 00ab 40       		.uleb128 0x40
 685 00ac 18       		.uleb128 0x18
 686 00ad 9642     		.uleb128 0x2116
 687 00af 19       		.uleb128 0x19
 688 00b0 00       		.byte	0
 689 00b1 00       		.byte	0
 690 00b2 0D       		.uleb128 0xd
 691 00b3 2E       		.uleb128 0x2e
 692 00b4 01       		.byte	0x1
 693 00b5 3F       		.uleb128 0x3f
 694 00b6 19       		.uleb128 0x19
 695 00b7 03       		.uleb128 0x3
 696 00b8 0E       		.uleb128 0xe
 697 00b9 3A       		.uleb128 0x3a
 698 00ba 0B       		.uleb128 0xb
 699 00bb 3B       		.uleb128 0x3b
 700 00bc 0B       		.uleb128 0xb
 701 00bd 27       		.uleb128 0x27
 702 00be 19       		.uleb128 0x19
 703 00bf 11       		.uleb128 0x11
 704 00c0 01       		.uleb128 0x1
 705 00c1 12       		.uleb128 0x12
 706 00c2 06       		.uleb128 0x6
 707 00c3 40       		.uleb128 0x40
 708 00c4 18       		.uleb128 0x18
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 16


 709 00c5 9642     		.uleb128 0x2116
 710 00c7 19       		.uleb128 0x19
 711 00c8 01       		.uleb128 0x1
 712 00c9 13       		.uleb128 0x13
 713 00ca 00       		.byte	0
 714 00cb 00       		.byte	0
 715 00cc 0E       		.uleb128 0xe
 716 00cd 34       		.uleb128 0x34
 717 00ce 00       		.byte	0
 718 00cf 03       		.uleb128 0x3
 719 00d0 0E       		.uleb128 0xe
 720 00d1 3A       		.uleb128 0x3a
 721 00d2 0B       		.uleb128 0xb
 722 00d3 3B       		.uleb128 0x3b
 723 00d4 0B       		.uleb128 0xb
 724 00d5 49       		.uleb128 0x49
 725 00d6 13       		.uleb128 0x13
 726 00d7 3F       		.uleb128 0x3f
 727 00d8 19       		.uleb128 0x19
 728 00d9 02       		.uleb128 0x2
 729 00da 18       		.uleb128 0x18
 730 00db 00       		.byte	0
 731 00dc 00       		.byte	0
 732 00dd 0F       		.uleb128 0xf
 733 00de 26       		.uleb128 0x26
 734 00df 00       		.byte	0
 735 00e0 49       		.uleb128 0x49
 736 00e1 13       		.uleb128 0x13
 737 00e2 00       		.byte	0
 738 00e3 00       		.byte	0
 739 00e4 00       		.byte	0
 740              		.section	.debug_aranges,"",%progbits
 741 0000 2C000000 		.4byte	0x2c
 742 0004 0200     		.2byte	0x2
 743 0006 00000000 		.4byte	.Ldebug_info0
 744 000a 04       		.byte	0x4
 745 000b 00       		.byte	0
 746 000c 0000     		.2byte	0
 747 000e 0000     		.2byte	0
 748 0010 00000000 		.4byte	.LFB32
 749 0014 A2000000 		.4byte	.LFE32-.LFB32
 750 0018 00000000 		.4byte	.LFB33
 751 001c 48000000 		.4byte	.LFE33-.LFB33
 752 0020 00000000 		.4byte	.LFB34
 753 0024 2C000000 		.4byte	.LFE34-.LFB34
 754 0028 00000000 		.4byte	0
 755 002c 00000000 		.4byte	0
 756              		.section	.debug_ranges,"",%progbits
 757              	.Ldebug_ranges0:
 758 0000 00000000 		.4byte	.LFB32
 759 0004 A2000000 		.4byte	.LFE32
 760 0008 00000000 		.4byte	.LFB33
 761 000c 48000000 		.4byte	.LFE33
 762 0010 00000000 		.4byte	.LFB34
 763 0014 2C000000 		.4byte	.LFE34
 764 0018 00000000 		.4byte	0
 765 001c 00000000 		.4byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 17


 766              		.section	.debug_line,"",%progbits
 767              	.Ldebug_line0:
 768 0000 C4000000 		.section	.debug_str,"MS",%progbits,1
 768      02004400 
 768      00000201 
 768      FB0E0D00 
 768      01010101 
 769              	.LASF22:
 770 0000 64756D6D 		.ascii	"dummyTxBuffer\000"
 770      79547842 
 770      75666665 
 770      7200
 771              	.LASF21:
 772 000e 64756D6D 		.ascii	"dummyRxBuffer\000"
 772      79527842 
 772      75666665 
 772      7200
 773              	.LASF26:
 774 001c 53504953 		.ascii	"SPIS_WaitForCommand\000"
 774      5F576169 
 774      74466F72 
 774      436F6D6D 
 774      616E6400 
 775              	.LASF3:
 776 0030 73686F72 		.ascii	"short unsigned int\000"
 776      7420756E 
 776      7369676E 
 776      65642069 
 776      6E7400
 777              	.LASF18:
 778 0043 73746174 		.ascii	"status\000"
 778      757300
 779              	.LASF11:
 780 004a 666C6F61 		.ascii	"float\000"
 780      7400
 781              	.LASF17:
 782 0050 52784275 		.ascii	"RxBuffer\000"
 782      66666572 
 782      00
 783              	.LASF1:
 784 0059 756E7369 		.ascii	"unsigned char\000"
 784      676E6564 
 784      20636861 
 784      7200
 785              	.LASF5:
 786 0067 6C6F6E67 		.ascii	"long unsigned int\000"
 786      20756E73 
 786      69676E65 
 786      6420696E 
 786      7400
 787              	.LASF27:
 788 0079 53504953 		.ascii	"SPIS_CleanupAfterRead\000"
 788      5F436C65 
 788      616E7570 
 788      41667465 
 788      72526561 
 789              	.LASF9:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 18


 790 008f 75696E74 		.ascii	"uint8\000"
 790      3800
 791              	.LASF23:
 792 0095 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 792      43313120 
 792      352E342E 
 792      31203230 
 792      31363036 
 793 00c8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 793      20726576 
 793      6973696F 
 793      6E203233 
 793      37373135 
 794 00fb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 794      66756E63 
 794      74696F6E 
 794      2D736563 
 794      74696F6E 
 795              	.LASF12:
 796 0123 646F7562 		.ascii	"double\000"
 796      6C6500
 797              	.LASF2:
 798 012a 73686F72 		.ascii	"short int\000"
 798      7420696E 
 798      7400
 799              	.LASF10:
 800 0134 75696E74 		.ascii	"uint32\000"
 800      333200
 801              	.LASF25:
 802 013b 433A5C55 		.ascii	"C:\\Users\\Ala\\Desktop\\Cypress\\BeoM_display.cyds"
 802      73657273 
 802      5C416C61 
 802      5C446573 
 802      6B746F70 
 803 0169 6E00     		.ascii	"n\000"
 804              	.LASF8:
 805 016b 756E7369 		.ascii	"unsigned int\000"
 805      676E6564 
 805      20696E74 
 805      00
 806              	.LASF19:
 807 0178 73547842 		.ascii	"sTxBuffer\000"
 807      75666665 
 807      7200
 808              	.LASF7:
 809 0182 6C6F6E67 		.ascii	"long long unsigned int\000"
 809      206C6F6E 
 809      6720756E 
 809      7369676E 
 809      65642069 
 810              	.LASF16:
 811 0199 746D7042 		.ascii	"tmpBuffer\000"
 811      75666665 
 811      7200
 812              	.LASF15:
 813 01a3 73697A65 		.ascii	"sizetype\000"
 813      74797065 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccLSHWpa.s 			page 19


 813      00
 814              	.LASF6:
 815 01ac 6C6F6E67 		.ascii	"long long int\000"
 815      206C6F6E 
 815      6720696E 
 815      7400
 816              	.LASF13:
 817 01ba 63686172 		.ascii	"char\000"
 817      00
 818              	.LASF20:
 819 01bf 54784275 		.ascii	"TxBuffer\000"
 819      66666572 
 819      00
 820              	.LASF24:
 821 01c8 6F706572 		.ascii	"operate.c\000"
 821      6174652E 
 821      6300
 822              	.LASF4:
 823 01d2 6C6F6E67 		.ascii	"long int\000"
 823      20696E74 
 823      00
 824              	.LASF14:
 825 01db 6C6F6E67 		.ascii	"long double\000"
 825      20646F75 
 825      626C6500 
 826              	.LASF0:
 827 01e7 7369676E 		.ascii	"signed char\000"
 827      65642063 
 827      68617200 
 828              	.LASF28:
 829 01f3 53504953 		.ascii	"SPIS_UpdateStatus\000"
 829      5F557064 
 829      61746553 
 829      74617475 
 829      7300
 830              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
